name: test
on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true
      - uses: actions/checkout@v2
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: check quality
        run: |
          source .venv/bin/activate
          prospector
      - name: test app
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        run: |
          echo Test
          source .venv/bin/activate
          coverage run -m unittest || exit 11
          coverage combine
          coverage report
          if [ -n "$CODACY_PROJECT_TOKEN" ]; then
            coverage xml -o cobertura.xml
            bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r cobertura.xml
          else
            echo no CODACY_PROJECT_TOKEN
          fi
